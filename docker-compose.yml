services:

# Sector Server
  sector-a:
    container_name: sector-a
    build: ./sector-server
    environment:
      - SECTOR_NAME=sector-a
      - QUEUE_HOST=queue1
      - QUEUE_NAME=queue1
      - COORDS=-34.91739651002616, -56.16210771871581;-34.91520592550176, -56.15995194170265;-34.915812960803784, -56.15930842617635;-34.91799473178162, -56.161485653707054
    depends_on:
      queue1:
        condition: service_healthy

# Sector Sensor
  sensor-1a:
    container_name: sensor-1a
    build: ./sensor
    environment:
      - SECTOR_NAME=sector-a
      - SENSOR_NAME=sensor-1a
      - COORD=-34.91689987581042, -56.16092258868043
      - MIN_PRESSURE=6.9
      - INIT_PRESSURE=11.6
    depends_on:
      - sector-a

###################################################################################################################

# Central Server

  ## Server
  central-server:
    container_name: central-server
    build: ./central-server
    links:
      - central-db
    environment:
      - DB_CONN_STRING=postgresql://my_user:my_password@central-db:5432/central-db?sslmode=disable
    depends_on:
      central-db:
        condition: service_healthy
    ports:
      - "80:8080"
    

  ## Central DB
  central-db:
    container_name: central-db
    image: 'bitnami/postgresql:latest'
    ports:
      - '5432'
    volumes:
    #  - './central-db/data:/bitnami/postgresql'
      - './central-db/init.sql:/docker-entrypoint-initdb.d/init.sql'
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=my_user
      - POSTGRESQL_PASSWORD=my_password
      - POSTGRESQL_DATABASE=central-db
    healthcheck:
      test: pg_isready -U my_user -d central-db
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

###################################################################################################################

# Mirror DB Server

  ## Server
  mirror-db-server:
    container_name: mirror-db-server
    build: ./mirror-db-server
    links:
      - mirror-backup-db
    environment:
      - DB_CONN_STRING=postgresql://repl_user:repl_password@mirror-backup-db:5432/central-db?sslmode=disable
    depends_on:
      mirror-backup-db:
        condition: service_healthy
    ports:
      - "81:8080"

  ## Mirror Backup DB
  mirror-backup-db:
    container_name: mirror-backup-db
    image: 'bitnami/postgresql:latest'
    ports:
      - '5432'
    depends_on:
      central-db:
        condition: service_healthy
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=central-db
      - POSTGRESQL_PASSWORD=my_password
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
    healthcheck:
      test: pg_isready -U repl_user -d central-db
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

###################################################################################################################

# RabbitMQ Queues

  queue1:
    container_name: queue1
    image: rabbitmq:3-alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - "5672:5672"
    expose:
      - "5672"

  queue2:
    container_name: queue2
    image: rabbitmq:3-alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - "5673:5672"
    expose:
      - "5672"

#####################################################################################################################
  
  batch:
    container_name: batch
    build: ./batching
    environment:
      - POLLING-RATE=1
      - WEB-SERVER-HOST=webserver-next
      - MIRROR-DB-SERVER=mirror-db-server
    ports:
      - '8082:8080'
    depends_on:
      - "mirror-db-server"
      - "webserver-next"

  webserver-next:
    container_name: webserver-next
    build: ./webserver-next
    environment:
      - NAME=WEBSERVER-NEXT
    volumes:
      - './webserver-next/prisma/dev.db:/usr/src/prisma/dev.db'
    ports:
      - "3000:3000"
      - "5555:5555"

#####################################################################################################################

# Proxy Server
  proxy-server:
    container_name: proxy-server
    build: ./proxy-server
    depends_on:
      - mirror-db-server
      - central-server
    ports:
      - "8083:80"

#####################################################################################################################
#####################################################################################################################

# Sector Server
  sector-b:
    container_name: sector-b
    build: ./sector-server
    environment:
      - SECTOR_NAME=sector-b
      - QUEUE_HOST=queue2
      - QUEUE_NAME=queue2
      - COORDS=-34.887640, -56.160007;-34.888776, -56.161005;-34.889502, -56.160200;-34.889858, -56.159170;-34.888652, -56.158108
    depends_on:
      queue2:
        condition: service_healthy

  # Sector Sensor
  sensor-1b:
    container_name: sensor-1b
    build: ./sensor
    environment:
      - SECTOR_NAME=sector-b
      - SENSOR_NAME=sensor-1b
      - COORD=-34.888428, -56.159369
      - MIN_PRESSURE=7.2354
      - INIT_PRESSURE=11.5432
    depends_on:
      - sector-b

  # Sector Sensor
  sensor-2b:
    container_name: sensor-2b
    build: ./sensor
    environment:
      - SECTOR_NAME=sector-b
      - SENSOR_NAME=sensor-2b
      - COORD=-34.889150, -56.159916
      - MIN_PRESSURE=7.11 
      - INIT_PRESSURE=12.21
    depends_on:
      - sector-b

   # Sector Sensor
  sensor-3b:
    container_name: sensor-3b
    build: ./sensor
    environment:
      - SECTOR_NAME=sector-b
      - SENSOR_NAME=sensor-3b
      - COORD=-34.888160, -56.160388
      - MIN_PRESSURE=7.05 
      - INIT_PRESSURE=13.51
    depends_on:
      - sector-b


